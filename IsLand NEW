class Solution {
public:
    int fun(vector<vector<int>>& grid,int i,int j,vector<vector<bool>>&visited, int n, int m, int curr ){
        if(i<0||j<0||i>=n||j>=m || visited[i][j]==true || grid[i][j]==0){
            return 0;
        }
        visited[i][j]=true;
        curr = curr+grid[i][j];
        int a = fun(grid,i+1,j,visited,n,m,curr);
        int b = fun(grid,i-1,j,visited,n,m,curr);
        int c = fun(grid,i,j+1,visited,n,m,curr);
        int d = fun(grid,i,j-1,visited,n,m,curr);
        return curr+max(a,max(b,max(c,d)));
    }
    int getMaximumGold(vector<vector<int>>& grid) {
        int ans = 0;
        int n = grid.size();
        int m = grid[0].size();
        vector<vector<bool>>visited(n,vector<bool>(m,false));
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
            if(grid[i][j]>0 && visited[i][j]==false){
            ans= max(ans,fun(grid,i,j,visited,n,m,0));
                }
            }
            }
        return ans;
    }
};
